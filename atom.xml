<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不才才</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2020-05-08T04:40:03.045Z</updated>
  <id>/</id>
  
  <author>
    <name>不才才</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>游戏人生</title>
    <link href="/2020/05/08/life/"/>
    <id>/2020/05/08/life/</id>
    <published>2020-05-08T02:09:14.000Z</published>
    <updated>2020-05-08T04:40:03.045Z</updated>
    
    <summary type="html">
    
      近年来史上最催泪游戏，让无数玩家感悟人生的游戏神作？
    
    </summary>
    
      <category term="转载" scheme="/categories/%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="life" scheme="/tags/life/"/>
    
      <category term="game" scheme="/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>快速幂运算</title>
    <link href="/2020/03/28/fast-power/"/>
    <id>/2020/03/28/fast-power/</id>
    <published>2020-03-28T05:26:19.000Z</published>
    <updated>2020-05-08T04:09:52.494Z</updated>
    
    <summary type="html">
    
      幂运算，即次方运算，通常我们会使用连乘来实现次方运算，但是往往效率不高，时间复杂度接近 O(n)
    
    </summary>
    
      <category term="技术" scheme="/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="算法" scheme="/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="快速幂" scheme="/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>生产者消费者</title>
    <link href="/2020/03/28/producer-customer/"/>
    <id>/2020/03/28/producer-customer/</id>
    <published>2020-03-28T04:43:30.000Z</published>
    <updated>2020-05-08T04:05:44.534Z</updated>
    
    <summary type="html">
    
      通过一个容器来解决生产者和消费者的强耦合问题。生产者和消费者彼此之间不直接通讯,而通过阻塞队列来进行通讯。
    
    </summary>
    
      <category term="技术" scheme="/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="设计模式" scheme="/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="生产者消费者" scheme="/tags/%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85/"/>
    
  </entry>
  
  <entry>
    <title>top-k</title>
    <link href="/2020/03/28/top-k/"/>
    <id>/2020/03/28/top-k/</id>
    <published>2020-03-28T04:30:36.000Z</published>
    <updated>2020-05-08T04:31:36.948Z</updated>
    
    <summary type="html">
    
      从 n 个未排序的数中得到的最大的 k 个数
    
    </summary>
    
      <category term="技术" scheme="/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="算法" scheme="/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Top K" scheme="/tags/Top-K/"/>
    
  </entry>
  
  <entry>
    <title>二叉树遍历</title>
    <link href="/2020/03/28/binary-tree/"/>
    <id>/2020/03/28/binary-tree/</id>
    <published>2020-03-28T04:25:16.000Z</published>
    <updated>2020-05-08T04:08:13.744Z</updated>
    
    <summary type="html">
    
      二叉树是每个结点最多有两个子树的树结构，二叉树常被用于实现二叉查找树和二叉堆
    
    </summary>
    
      <category term="技术" scheme="/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="数据结构" scheme="/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="二叉树" scheme="/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="/2020/03/28/singleton/"/>
    <id>/2020/03/28/singleton/</id>
    <published>2020-03-28T04:19:28.000Z</published>
    <updated>2020-05-08T04:03:34.176Z</updated>
    
    <summary type="html">
    
      单例模式属于创建型设计模式，单例模式保证一个类仅有一个实例，并提供一个访问它的全局访问点
    
    </summary>
    
      <category term="技术" scheme="/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="设计模式" scheme="/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="单例模式" scheme="/tags/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>时间复杂度</title>
    <link href="/2020/03/27/time-complexity/"/>
    <id>/2020/03/27/time-complexity/</id>
    <published>2020-03-27T08:33:09.000Z</published>
    <updated>2020-05-08T04:01:30.995Z</updated>
    
    <summary type="html">
    
      O(f(n)) 表示算法所执行的指令数和 f(n) 成正比, 表示算法执行的上界（最低）
    
    </summary>
    
      <category term="技术" scheme="/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="算法" scheme="/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="时间复杂度" scheme="/tags/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
    
  </entry>
  
</feed>
